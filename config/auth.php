<?php

return [

    /*
    |--------------------------------------------------------------------------
    | 认证默认设置
    |--------------------------------------------------------------------------
    |
    | 此选项定义了应用程序的默认认证 "守卫" 和密码重置 "代理"。你可以根据需要更改这些值，
    | 但对于大多数应用程序来说，它们是一个很好的起点。
    |
    */

    'defaults' => [
        'guard'     => env('AUTH_GUARD', 'web'),
        'passwords' => env('AUTH_PASSWORD_BROKER', 'users'),
    ],

    /*
    |--------------------------------------------------------------------------
    | 认证守卫
    |--------------------------------------------------------------------------
    |
    | 接下来，你可以为应用程序定义每个认证守卫。当然，已经为你定义了一个很好的默认配置，
    | 它使用会话存储和 Eloquent 用户提供者。
    |
    | 所有认证守卫都有一个用户提供者，它定义了如何从应用程序使用的数据库或其他存储系统中
    | 实际检索用户。通常，会使用 Eloquent。
    |
    | 支持: "session"
    |
    */

    'guards' => [
        'web' => [
            'driver'   => 'session',
            'provider' => 'users',
        ],
    ],

    /*
    |--------------------------------------------------------------------------
    | 用户提供者
    |--------------------------------------------------------------------------
    |
    | 所有认证守卫都有一个用户提供者，它定义了如何从应用程序使用的数据库或其他存储系统中
    | 实际检索用户。通常，会使用 Eloquent。
    |
    | 如果你有多个用户表或模型，你可以配置多个提供者来表示模型/表。然后这些提供者可以
    | 分配给你定义的任何额外认证守卫。
    |
    | 支持: "database", "eloquent"
    |
    */

    'providers' => [
        // 'users' => [
        //     'driver' => 'eloquent',
        //     'model' => env('AUTH_MODEL', App\Models\User::class),
        // ],

        // 'users' => [
        //     'driver' => 'database',
        //     'table' => 'users',
        // ],
    ],

    /*
    |--------------------------------------------------------------------------
    | 重置密码
    |--------------------------------------------------------------------------
    |
    | 这些配置选项指定了 Laravel 密码重置功能的行为，包括用于存储令牌的表以及
    | 用于实际检索用户的用户提供者。
    |
    | 过期时间是每个重置令牌被认为有效的分钟数。此安全功能使令牌的有效期较短，
    | 从而减少被猜测的时间。你可以根据需要更改此设置。
    |
    | 节流设置是用户在生成更多密码重置令牌之前必须等待的秒数。这可以防止用户
    | 快速生成大量密码重置令牌。
    |
    */

    'passwords' => [
        'users' => [
            'provider' => 'users',
            'table'    => env('AUTH_PASSWORD_RESET_TOKEN_TABLE', 'password_reset_tokens'),
            'expire'   => 60,
            'throttle' => 60,
        ],
    ],

    /*
    |--------------------------------------------------------------------------
    | 密码确认超时时间
    |--------------------------------------------------------------------------
    |
    | 在这里，你可以定义密码确认窗口过期之前的秒数，过期后用户将通过确认屏幕
    | 被要求重新输入密码。默认情况下，超时时间为三小时。
    |
    */

    'password_timeout' => env('AUTH_PASSWORD_TIMEOUT', 10800),

];
